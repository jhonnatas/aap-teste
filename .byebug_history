c
puts self.user.activities.joins(:activity_registrations).where(event_id: self.event_id, activity_registrations: { status: 'confirmed' }).to_a
puts self.user.activities.joins(:activity_registrations).where(event_id: self.event_id, activity_registrations: { status: 'confirmed' }).to_sql
puts ActivityRegistration.where(user_id: self.user.id).to_a
puts ActivityRegistration.where(user_id:self.user.id).to_a
puts self.event.inspect
puts self.user.inspect
puts self.inspect
c
n
c
n
c
@certificate.attended_activities.empty?
c
n
@certificate.attended_activities.empty?
@certificate
c
n
c
n
@certificate.attended_activities.count
@certificate.attended_activities
@certificate
n
c
pdf_double.table
pdf_double
expect(pdf_double)
expect(pdf_double).to 
c
n
service.generate_pdf
expect(pdf_double).to receive(:table).with(expected_table_data, anything)
n
pdf_double
n
certificate.attended_activities
certificate.class
certificate
certificate.attended_activties
certificate
activity_registration
activity
c
authorize @activity
c
current_user
authorize @activity
@activity.save
@activity
c
n
c
@event_changed
@event
c
Event.last
event_changed
event
c
n
c
n
authorize current_user
authorize
current_user
@user
params[user]
params[:user]
params
c
user.admin?
user.admin
user
record.id
c
record.id
user.admin?
user
@user
c
n
current_user.email
current_user
@user.email
@user
c
n
c
n
params
@user
c
n
c
n
@vet
c
@activity
c
params
@event.activities.ids
@event.activities
params
c
params
c
@event.activities.ids
@event.activities
params
@event.activities.find(params[:id])
@event.activities
@event
params
Activity.find(params[:id]).event
Activity.find(params[:id]).events
Activity.find(params[:id])
params
Activity.all
params
c
params
c
params
c
@activities
c
@activities
c
@event.activities
@event
@activities
c
@activities
c
@event.activities
@event
c
@event.activities.order(period_start: :desc)
@activities
c
@activities
n
c
n
@registration
c
n
@registration
n
@registration
c
params
params[:id]
params[:event_id]
Registration.for_user_and_event(current_user, params[:event_id])
Registration.for_user_and_event(current_user, params[:id])
Registration.for_user_and_event(current_user, params[:event_id])
params
@registration
c
redirects_to events_path
@registration.destroy
@registration
c
@registration
n
c
Registration.all
params[:event_id]
params[:id]
id
@registration
n
c
q
Registration.for_user_and_event(current_user.id, params[:event_id])
Registration.for_user_and_event(current_user.id, params[:id])
Registration.for_user_and_event(current_user, params[:id])
current_user.id
Registration.all
Registratition.all
params
registration
Registration
c
@registration
n
c
Registration.for_user_and_event(current_user, params[:id])
Registration.for_user_and_event(current_user)
Registration
Registration.for_user_and_event(current_user.id, id)
@registration
n
current_user
params
id
event
c
n
event
registration.id
registration
id
q
response.body
response
events.first.name
events.first
events
q
response.body
response
c
response
response.routes
response.route
response
response.body
response
c
flash[:notice]
flash.each { |c,m| puts "c  m" }
flash.each { |c,m| puts c  m }
flash.each {|c,m| puts c  m }
flash.each do |c, m|
flash.each
flash
c
flash.class
flash.each do |n,m|
flash.each
now[:notice]
flash[:notice]
flash
c
flash[:notice]
flash
c
n
flash[:notice]
flash.key :notice
flash.[:notice]
flash[:notice]
flash
c
flash[:alert]
c
flash['alert']
flash[alert]
flash
c
flash[:alert]
